// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TodoItem Component renders the checkbox with correct background color when completed 1`] = `
<View
  style={
    {
      "alignItems": "center",
      "flexDirection": "row",
      "marginVertical": 5,
    }
  }
>
  <View
    style={
      {
        "marginRight": 10,
      }
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
      testID="checkbox"
    >
      <View
        completed={true}
        style={
          {
            "backgroundColor": "#4caf50",
            "borderBottomLeftRadius": 3,
            "borderBottomRightRadius": 3,
            "borderColor": "#4caf50",
            "borderStyle": "solid",
            "borderTopLeftRadius": 3,
            "borderTopRightRadius": 3,
            "borderWidth": 2,
            "height": 20,
            "width": 20,
          }
        }
      />
    </View>
  </View>
  <Text
    completed={true}
    style={
      {
        "flexBasis": 0,
        "flexGrow": 1,
        "flexShrink": 1,
        "fontSize": 16,
        "textDecorationColor": "black",
        "textDecorationLine": "line-through",
        "textDecorationStyle": "solid",
      }
    }
  >
    Test Todo
  </Text>
  <View
    style={
      {
        "flexDirection": "row",
        "gap": 10,
      }
    }
  >
    <View
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          [
            {},
          ]
        }
      >
        <Text
          style={
            [
              {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          Edit
        </Text>
      </View>
    </View>
    <View
      accessibilityRole="button"
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onClick={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        {
          "opacity": 1,
        }
      }
    >
      <View
        style={
          [
            {},
          ]
        }
      >
        <Text
          style={
            [
              {
                "color": "#007AFF",
                "fontSize": 18,
                "margin": 8,
                "textAlign": "center",
              },
            ]
          }
        >
          Delete
        </Text>
      </View>
    </View>
  </View>
</View>
`;
